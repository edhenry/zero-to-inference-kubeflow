apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: zero-to-inference-with-kubeflow-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.6.6, pipelines.kubeflow.org/pipeline_compilation_time: '2021-10-19T14:36:47.620518',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Example pipeline for the
      Dell Data Science Week 2021 Zero to Inference with Kubeflow Session", "inputs":
      [{"default": "/mnt", "description": "Directory where we want to save our model.
      Defaults to ''./''.", "name": "model_export_dir", "optional": true, "type":
      "String"}, {"default": "200", "description": "Number of training steps to take.
      Defaults to ''200''.", "name": "train_steps", "optional": true, "type": "String"},
      {"default": "0.01", "description": "Learning rate to use for our model. Defaults
      to ''0.01''.", "name": "learning_rate", "optional": true, "type": "String"},
      {"default": "100", "description": "Batch size for mini-batching. Defaults to
      ''100''.", "name": "batch_size", "optional": true, "type": "String"}, {"default":
      "ztik-pvc", "description": "Name of the local k8s PVC used within the pipeline.
      Defaults to ''ztik''.", "name": "pvc_name", "optional": true, "type": "String"}],
      "name": "Zero to Inference with Kubeflow"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.6.6}
spec:
  entrypoint: zero-to-inference-with-kubeflow
  templates:
  - name: kubeflow-serve-model-using-kfserving
    container:
      args:
      - -u
      - kfservingdeployer.py
      - --action
      - apply
      - --model-name
      - mnist-sample-1
      - --model-uri
      - pvc://{{inputs.parameters.ztik-pvc-name}}
      - --canary-traffic-percent
      - '100'
      - --namespace
      - kubeflow-user-example-com
      - --framework
      - tensorflow
      - --custom-model-spec
      - '{}'
      - --autoscaling-target
      - '0'
      - --service-account
      - ''
      - --enable-istio-sidecar
      - "False"
      - --output-path
      - /tmp/outputs/InferenceService_Status/data
      - --inferenceservice-yaml
      - '{}'
      - --watch-timeout
      - '300'
      - --min-replicas
      - '-1'
      - --max-replicas
      - '-1'
      - --request-timeout
      - '60'
      command: [python]
      image: quay.io/aipipeline/kfserving-component:v0.5.1
    inputs:
      parameters:
      - {name: ztik-pvc-name}
    outputs:
      artifacts:
      - {name: kubeflow-serve-model-using-kfserving-InferenceService-Status, path: /tmp/outputs/InferenceService_Status/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.6.6
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Serve
          Models using Kubeflow KFServing", "implementation": {"container": {"args":
          ["-u", "kfservingdeployer.py", "--action", {"inputValue": "Action"}, "--model-name",
          {"inputValue": "Model Name"}, "--model-uri", {"inputValue": "Model URI"},
          "--canary-traffic-percent", {"inputValue": "Canary Traffic Percent"}, "--namespace",
          {"inputValue": "Namespace"}, "--framework", {"inputValue": "Framework"},
          "--custom-model-spec", {"inputValue": "Custom Model Spec"}, "--autoscaling-target",
          {"inputValue": "Autoscaling Target"}, "--service-account", {"inputValue":
          "Service Account"}, "--enable-istio-sidecar", {"inputValue": "Enable Istio
          Sidecar"}, "--output-path", {"outputPath": "InferenceService Status"}, "--inferenceservice-yaml",
          {"inputValue": "InferenceService YAML"}, "--watch-timeout", {"inputValue":
          "Watch Timeout"}, "--min-replicas", {"inputValue": "Min Replicas"}, "--max-replicas",
          {"inputValue": "Max Replicas"}, "--request-timeout", {"inputValue": "Request
          Timeout"}], "command": ["python"], "image": "quay.io/aipipeline/kfserving-component:v0.5.1"}},
          "inputs": [{"default": "create", "description": "Action to execute on KFServing",
          "name": "Action", "type": "String"}, {"default": "", "description": "Name
          to give to the deployed model", "name": "Model Name", "type": "String"},
          {"default": "", "description": "Path of the S3 or GCS compatible directory
          containing the model.", "name": "Model URI", "type": "String"}, {"default":
          "100", "description": "The traffic split percentage between the candidate
          model and the last ready model", "name": "Canary Traffic Percent", "type":
          "String"}, {"default": "", "description": "Kubernetes namespace where the
          KFServing service is deployed.", "name": "Namespace", "type": "String"},
          {"default": "", "description": "Machine Learning Framework for Model Serving.",
          "name": "Framework", "type": "String"}, {"default": "{}", "description":
          "Custom model runtime container spec in JSON", "name": "Custom Model Spec",
          "type": "String"}, {"default": "0", "description": "Autoscaling Target Number",
          "name": "Autoscaling Target", "type": "String"}, {"default": "", "description":
          "ServiceAccount to use to run the InferenceService pod", "name": "Service
          Account", "type": "String"}, {"default": "True", "description": "Whether
          to enable istio sidecar injection", "name": "Enable Istio Sidecar", "type":
          "Bool"}, {"default": "{}", "description": "Raw InferenceService serialized
          YAML for deployment", "name": "InferenceService YAML", "type": "String"},
          {"default": "300", "description": "Timeout seconds for watching until InferenceService
          becomes ready.", "name": "Watch Timeout", "type": "String"}, {"default":
          "-1", "description": "Minimum number of InferenceService replicas", "name":
          "Min Replicas", "type": "String"}, {"default": "-1", "description": "Maximum
          number of InferenceService replicas", "name": "Max Replicas", "type": "String"},
          {"default": "60", "description": "Specifies the number of seconds to wait
          before timing out a request to the component.", "name": "Request Timeout",
          "type": "String"}], "name": "Kubeflow - Serve Model using KFServing", "outputs":
          [{"description": "Status JSON output of InferenceService", "name": "InferenceService
          Status", "type": "String"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "84f27d18805744db98e4d08804ea3c0e6ca5daa1a3a90dd057b5323f19d9dd2c", "url":
          "https://raw.githubusercontent.com/kubeflow/pipelines/master/components/kubeflow/kfserving/component.yaml"}',
        pipelines.kubeflow.org/arguments.parameters: '{"Action": "apply", "Autoscaling
          Target": "0", "Canary Traffic Percent": "100", "Custom Model Spec": "{}",
          "Enable Istio Sidecar": "False", "Framework": "tensorflow", "InferenceService
          YAML": "{}", "Max Replicas": "-1", "Min Replicas": "-1", "Model Name": "mnist-sample-1",
          "Model URI": "pvc://{{inputs.parameters.ztik-pvc-name}}", "Namespace": "kubeflow-user-example-com",
          "Request Timeout": "60", "Service Account": "", "Watch Timeout": "300"}'}
  - name: train-mnist-classifier
    container:
      args: [/opt/model.py, --tf-export-dir, '{{inputs.parameters.model_export_dir}}',
        --tf-train-steps, '{{inputs.parameters.train_steps}}', --tf-batch-size, '{{inputs.parameters.batch_size}}',
        --tf-learning-rate, '{{inputs.parameters.learning_rate}}']
      image: edhenry/ztik-model
      volumeMounts:
      - {mountPath: /mnt, name: ztik-pvc}
    inputs:
      parameters:
      - {name: batch_size}
      - {name: learning_rate}
      - {name: model_export_dir}
      - {name: train_steps}
      - {name: ztik-pvc-name}
    metadata:
      annotations: {pipelines.kubeflow.org/task_display_name: Train MNIST Classifier}
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.6.6
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
    volumes:
    - name: ztik-pvc
      persistentVolumeClaim: {claimName: '{{inputs.parameters.ztik-pvc-name}}'}
  - name: zero-to-inference-with-kubeflow
    inputs:
      parameters:
      - {name: batch_size}
      - {name: learning_rate}
      - {name: model_export_dir}
      - {name: pvc_name}
      - {name: train_steps}
    dag:
      tasks:
      - name: kubeflow-serve-model-using-kfserving
        template: kubeflow-serve-model-using-kfserving
        dependencies: [train-mnist-classifier, ztik-pvc]
        arguments:
          parameters:
          - {name: ztik-pvc-name, value: '{{tasks.ztik-pvc.outputs.parameters.ztik-pvc-name}}'}
      - name: train-mnist-classifier
        template: train-mnist-classifier
        dependencies: [ztik-pvc]
        arguments:
          parameters:
          - {name: batch_size, value: '{{inputs.parameters.batch_size}}'}
          - {name: learning_rate, value: '{{inputs.parameters.learning_rate}}'}
          - {name: model_export_dir, value: '{{inputs.parameters.model_export_dir}}'}
          - {name: train_steps, value: '{{inputs.parameters.train_steps}}'}
          - {name: ztik-pvc-name, value: '{{tasks.ztik-pvc.outputs.parameters.ztik-pvc-name}}'}
      - name: ztik-pvc
        template: ztik-pvc
        arguments:
          parameters:
          - {name: pvc_name, value: '{{inputs.parameters.pvc_name}}'}
  - name: ztik-pvc
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: '{{workflow.name}}-{{inputs.parameters.pvc_name}}'
        spec:
          accessModes:
          - ReadWriteMany
          resources:
            requests:
              storage: 1Gi
    inputs:
      parameters:
      - {name: pvc_name}
    outputs:
      parameters:
      - name: ztik-pvc-manifest
        valueFrom: {jsonPath: '{}'}
      - name: ztik-pvc-name
        valueFrom: {jsonPath: '{.metadata.name}'}
      - name: ztik-pvc-size
        valueFrom: {jsonPath: '{.status.capacity.storage}'}
    metadata:
      annotations: {pipelines.kubeflow.org/task_display_name: Create Pipeline PVC}
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.6.6
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  arguments:
    parameters:
    - {name: model_export_dir, value: /mnt}
    - {name: train_steps, value: '200'}
    - {name: learning_rate, value: '0.01'}
    - {name: batch_size, value: '100'}
    - {name: pvc_name, value: ztik-pvc}
  serviceAccountName: pipeline-runner
